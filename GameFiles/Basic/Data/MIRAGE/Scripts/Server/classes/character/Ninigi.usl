class CNinigi inherit CCharacter

	var bool m_bHerbivore;
	var bool m_bCarnivore;
	var bool m_bHunting;
	
	export constructor()
		m_bHerbivore = false;
		m_bCarnivore = false;
		m_bHunting = false;
	endconstructor;

	export destructor()
	enddestructor;

	export proc void Save(^CUOFWriterNode p_pxWriterNode)
		KLog.LogWarn("CArc.Save","[CNinigi] Saving '"+p_pxWriterNode^.GetType().ToString()+"'");
		super.Save(p_pxWriterNode);
		if(!CMirageSrvMgr.SDK())then
			var CFourCC xBase="NiIn";
			var ^CUOFWriterNode pxWalk=p_pxWriterNode^.AddSubChunk(xBase,1);
			var ^CArc pxArc=^(pxWalk^.GetArc());
			(pxArc^) << m_bHunting;
			pxWalk^.Close();
		endif;
	endproc;
	
	export proc void Load(^CUOFReaderNode p_pxReaderNode)
		if(p_pxReaderNode^.GetType()=="NiIn")then
			var int iVersion=p_pxReaderNode^.GetVersion();
			var ^CArc pxArc=^(p_pxReaderNode^.GetArc());
			if(iVersion>=1)then
				(pxArc^) << m_bHunting;
			endif;
		else
			super.Load(p_pxReaderNode);
		endif;
	endproc;
	
	export proc void OnInit(bool p_bLoad)
		super.OnInit(p_bLoad);
		SetEatingType();
	endproc;
	
	export proc void SetEatingType()
		var int iHerb, iCarn;
		iHerb = m_xTechTree.GetValueI(GetObjPath()+"/herbivore", 0);
		iCarn = m_xTechTree.GetValueI(GetObjPath()+"/carnivore", 0);
		var ^CAttribs pxAttr = GetAttribs();
		if(pxAttr != null)then
			pxAttr^.SetValue("Herbivore", iHerb>0);
			pxAttr^.SetValue("Carnivore", iCarn>0);
		endif;
		m_bHerbivore = iHerb>0;
		m_bCarnivore = iCarn>0;
	endproc;
	
	export proc void ReactToGamePlayCommand(string p_sCommand, ^CGameObj p_pxObject, vec3 p_vPos, string p_sMiscParams, bool p_bQ, bool p_bS, bool p_bA)
		if(m_bIllusion)then
			return super.ReactToGamePlayCommand(p_sCommand,p_pxObject,p_vPos,p_sMiscParams,p_bQ,p_bS,p_bA);
		endif;
		if(	IsTrapped() &&
			!(p_sMiscParams.Find("/Kill")!=-1||p_sCommand=="Kill") &&
			!(p_sCommand=="setlevel"||p_sMiscParams.Find("/LevelUp")!=-1)
			)then return; endif;
		if(GetTransportObj().IsValid()&&!(p_sCommand=="setlevel"||p_sMiscParams.Find("/LevelUp")!=-1||p_sMiscParams.Find("/LeaveTransport")>=0))then return; endif;
		if(p_sCommand=="Action") then
			if(p_sMiscParams.Find("/EatSomethingFast")>=0)then
				EatPlantsOrMeat(null, GetPos(), true, p_bQ);
			else
				super.ReactToGamePlayCommand(p_sCommand,p_pxObject,p_vPos,p_sMiscParams,p_bQ,p_bS,p_bA);
			endif;
		elseif(p_sCommand=="EatThatThing")then
			EatPlantsOrMeat(p_pxObject, p_vPos, false, p_bQ);
		else
			super.ReactToGamePlayCommand(p_sCommand,p_pxObject,p_vPos,p_sMiscParams,p_bQ,p_bS,p_bA);
		endif;
	endproc;
	
	proc void EatPlantsOrMeat(^CGameObj p_pxObject, vec3 p_vPos, bool p_bFastFood, bool p_bQ)
		if(HasFullHP())then return; endif;
		var ^CEating pxTask=cast<CEating>(CSrvWrap.GetUSLFactoryMgr().CreateState(GetFSM(), "Eating"));
		if(pxTask==null)then return; endif;
		var bool bInit=false;
		if(p_pxObject!=null)then
			bInit=pxTask^.Init(GetHandle(),p_pxObject^.GetHandle());
		else
			bInit=pxTask^.Init(GetHandle(),p_vPos, p_bFastFood);
		endif;
		if(bInit)then
			pxTask^.SetUserCommand(true);
			NewTaskFO(pxTask,p_bQ);
		else
			pxTask^.GetFactory()^.FreeState(pxTask);
		endif;
		pxTask^.SetUserCommand(true);
		//pxTask^.SetUserCommand(p_iUserCmd==1);
	endproc;
	
	export proc string EatAnim()
		return "potter_ground";
	endproc;
	
//	export proc bool IsBugged()
//		return m_bBugged;
//	endproc;
	
	export proc bool IsCarnivore()
		return m_bCarnivore;
	endproc;
	
	export proc bool IsHerbivore()
		return m_bHerbivore;
	endproc;
	
	export proc real GetAdaption()
		return 1.5f;
	endproc;
	
	export proc bool IsHunting()
		return m_bHunting;
	endproc;
	
	export proc void SetHunting(bool p_bHunting)
		m_bHunting = p_bHunting;
	endproc;
	
	export proc real FeedFactor()
		return 3.0;
	endproc;
	
//	export proc real FeedFactor()
//		return(m_xTechTree.GetValueR(GetObjPath()+"/FeedFactor",3.0f));
//	endproc;
	
endclass;
