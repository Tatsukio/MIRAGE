Root {
	categories = 'always own level caste curtask cmdbar rallyupdate debug CardUpdate CurProcess CurProcessObj Info BuildUp Icon Selection AggroPos inventory_item ActionMenu ActionMenuProgress leveled WalkTargetUpdate Line Marker MrgSprt'
	attribs {
		hitpoints {
			type = 'int'
			flags = 'always CardUpdate Info Icon Selection'
			default = '100'
		}
		maxhitpoints {
			type = 'int'
			flags = 'always CardUpdate Info Icon Selection'
			default = '100'
		}
		anml_aggressive_type {
			type = 'int'
			flags = 'always Selection'
			default = '-2'
		}
		ObjPath {
			type = 'string'
			flags = 'always'
		}
		OptimalTarget {
			type = 'int'
			flags = 'own'
		}
		IsCameraBlocker {
			type = 'bool'
			flags = 'always'
		}
		stoneDelivery {
			type = 'bool'
			flags = 'own'
		}
		woodDelivery {
			type = 'bool'
			flags = 'own'
		}
		foodDelivery {
			type = 'bool'
			flags = 'own'
		}
		fishDelivery {
			type = 'bool'
			flags = 'own'
		}
		ironDelivery {
			type = 'bool'
			flags = 'own'
		}
		resinDelivery {
			type = 'bool'
			flags = 'own'
		}
		boneDelivery {
			type = 'bool'
			flags = 'own'
		}
		hideDelivery {
			type = 'bool'
			flags = 'own'
		}
		count_as_hq {
			type = 'bool'
			flags = 'own'
			default = 'false'
		}
	}
	INFO {
		attribs {
			info {
				type = 'string'
				flags = 'always debug'
			}
		}
	}
	TRRT {
		attribs {
		}
	}
	QMRK {
		attribs {
			QuestionMarkToolTip {
				type = 'string'
				flags = 'always'
			}
			CustomPicture {
				type = 'string'
				flags = 'always'
			}
			CustomName {
				type = 'string'
				flags = 'always'
			}
		}
	}
	SLOC {
		attribs {
			include_building {
				type = 'int'
				flags = 'always'
				default = '1'
			}
			ignore_pointbuy {
				type = 'string'
				flags = 'always'
				default = '0'
			}
			is_sequence {
				type = 'string'
				flags = 'always'
				default = '0'
			}
			seq_filename {
				type = 'string'
				flags = 'always'
				default = ''
			}
			filters {
				type = 'string'
				flags = 'always'
				default = ''
			}
			playerinfodb {
				type = 'string'
				flags = 'always'
				default = ''
			}
		}
	}
	SLCT {
	}
	FGHT {
		attribs {
			level {
				type = 'int'
				flags = 'always level cmdbar Info'
			}
			unique {
				type = 'bool'
				flags = 'own'
			}
			alarmed {
				type = 'bool'
				flags = 'always Icon'
			}
			formation_x {
				type = 'float'
				flags = 'own'
			}
			formation_y {
				type = 'float'
				flags = 'own'
			}
			healer {
				type = 'bool'
				flags = 'own'
			}
			damage {
				type = 'int'
				flags = 'always Info'
			}
			meleedamage {
				type = 'int'
				flags = 'always Info'
			}
			rangedamage {
				type = 'int'
				flags = 'always Info'
			}
			secondarydamage {
				type = 'int'
				flags = 'always Info'
			}
			damagetype {
				type = 'int'
				flags = 'always Info'
			}
			projectile {
				type = 'string'
				flags = 'always'
			}
			defense {
				type = 'int'
				flags = 'always Info'
			}
			rangeddefense {
				type = 'int'
				flags = 'always Info'
			}
			range {
				type = 'int'
				flags = 'always'
			}
			min_attackrange {
				type = 'int'
				flags = 'always Info'
			}
			max_attackrange {
				type = 'int'
				flags = 'always Info'
			}
			alarm_range {
				type = 'int'
				flags = 'always'
			}
			range_marker {
				type = 'float'
				flags = 'always Selection Marker'
			}
			alarm_range_marker {
				type = 'float'
				flags = 'always Selection Marker'
			}
			meleeduration {
				type = 'float'
				flags = 'always Info'
			}
			rangeduration {
				type = 'float'
				flags = 'always Info'
			}
			melee_piercing {
				type = 'float'
				flags = 'always Info'
			}
			range_piercing {
				type = 'float'
				flags = 'always Info'
			}
			meleeslot {
				type = 'int'
				flags = 'always Info'
				default = '-1'
			}
			rangeslot {
				type = 'int'
				flags = 'always Info'
				default = '-1'
			}
			AggressionState {
				type = 'int'
				flags = 'own cmdbar'
				default = '2'
			}
			RangeMarker {
				type = 'string'
				flags = 'always Marker'
			}
			HealingMarker {
				type = 'float'
				flags = 'always Marker'
			}
			TmpAttackBoni {
				type = 'int'
				flags = 'always Info'
			}
			TmpMeleeAttackBoni {
				type = 'int'
				flags = 'always Info'
			}
			TmpRangeAttackBoni {
				type = 'int'
				flags = 'always Info'
			}
			TmpDefenseBoni {
				type = 'int'
				flags = 'always Info'
			}
			TmpRangedDefenseBoni {
				type = 'int'
				flags = 'always Info'
			}
			TmpRangeBoni {
				type = 'int'
				flags = 'always Info'
			}
			TmpSkullsBoni {
				type = 'int'
				flags = 'always Info'
			}
			BuffDecals {
				type = 'string'
				flags = 'always own Info'
			}
			SpecialActionCounters {
				type = 'string'
				flags = 'own ActionMenuProgress'
			}
			SpecialActionNames {
				type = 'string'
				flags = 'own'
			}
			PrepareActionNames {
				type = 'string'
				flags = 'own'
			}
			unit_count {
				type = 'bool'
				flags = 'own CardUpdate'
				default = 'true'
			}
			Equip_Slot_0 {
				type = 'string'
				flags = 'always Info'
			}
			Equip_Slot_1 {
				type = 'string'
				flags = 'always Info'
			}
			Equip_Slot_2 {
				type = 'string'
				flags = 'always Info'
			}
			Equip_Slot_3 {
				type = 'string'
				flags = 'always Info'
			}
			Cur_Weapon {
				type = 'string'
				flags = 'always Info'
			}
			CurTask {
				type = 'string'
				flags = 'always curtask CardUpdate'
			}
			CurProcess {
				type = 'int'
				flags = 'always CurProcess BuildUp ActionMenuProgress'
			}
			CurProcessObj {
				type = 'string'
				flags = 'own CurProcessObj ActionMenuProgress ActionMenu Info'
			}
			CurEnemy {
				type = 'int'
				flags = 'always'
			}
			CurDest {
				type = 'int'
				flags = 'always Line'
				default = '-1'
			}
			CurRally {
				type = 'int'
				flags = 'always Line'
				default = '-1'
			}
			TaskDescription {
				type = 'string'
				flags = 'own CardUpdate'
			}
			FollowFailed {
				type = 'bool'
				flags = 'own'
			}
			ObjFlag {
				type = 'string'
				flags = 'always Selection cmdbar ActionMenu'
			}
			transporter_guid {
				type = 'string'
				flags = 'always CardUpdate Info'
			}
			transportclass {
				type = 'int'
				default = '0'
				flags = 'own always'
			}
			tribe {
				type = 'string'
				flags = 'always'
				default = ''
			}
			can_attack {
				type = 'bool'
				flags = 'own'
			}
			IsRallySite {
				type = 'int'
				flags = 'own cmdbar Line'
				default = '0'
			}
			RallyPoint {
				type = 'string'
				flags = 'own rallyupdate Line'
				default = '[0.0 0.0 0.0]'
			}
			ProdQueue {
				type = 'string'
				flags = 'own cmdbar ActionMenuProgress Info'
			}
			LocalUpgrade {
				type = 'string'
				flags = 'own ActionMenu'
			}
			AIRelevant {
				type = 'bool'
				flags = 'always'
				default = 'true'
			}
			dead {
				type = 'bool'
				flags = 'always'
				default = 'false'
			}
			GateState {
				type = 'int'
				flags = 'own leveled'
				default = '-1'
			}
			WalkTargets {
				type = 'string'
				flags = 'own WalkTargetUpdate'
			}
			PatrolTargets {
				type = 'string'
				flags = 'own WalkTargetUpdate'
			}
			MineTargets {
				type = 'string'
				flags = 'own WalkTargetUpdate'
			}
			WaterTurretTargets {
				type = 'string'
				flags = 'own WalkTargetUpdate'
			}
			inventory_item_name {
				type = 'string'
				flags = 'own Info CardUpdate'
			}
			inventory_item_guid {
				type = 'string'
				flags = 'own Info CardUpdate'
			}
			clientpyramid_slotid {
				type = 'int'
				flags = 'own CardUpdate'
				default = '-1'
			}
			clientpyramid_replacecard {
				type = 'string'
				flags = 'own'
			}
			ac_successor {
				type = 'string'
				flags = 'always MrgSprt'
				default = ''
			}
			skulls {
				type = 'int'
				flags = 'always Info'
			}
			ReactorCurTask {
				type = 'string'
				flags = 'always curtask CardUpdate'
			}
			ReactorCurProcess {
				type = 'int'
				flags = 'always CurProcess ActionMenuProgress'
			}
			ReactorCurProcessObj {
				type = 'string'
				flags = 'own CurProcessObj ActionMenuProgress ActionMenu Info'
			}
			ReactorProdQueue {
				type = 'string'
				flags = 'own cmdbar ActionMenuProgress Info'
			}
			ReadyForWork {
				type = 'int'
				flags = 'always curtask CardUpdate'
				default = '1'
			}
			supply {
				type = 'int'
				flags = 'always own CardUpdate Info Selection'
				default = '0'
			}
			IsSiegeUnit {
				type = 'int'
				flags = 'always'
				default = '0'
			}
			IsDockingWall {
				type = 'int'
				flags = 'always'
				default = '0'
			}
			IsDockable {
				type = 'int'
				flags = 'always'
				default = '0'
			}
			killercount {
				type = 'int'
				flags = 'own always Info'
				default = '0'
			}
			replenishtime {
				type = 'int'
				flags = 'own'
				default = '0'
			}
			replenishamount {
				type = 'int'
				flags = 'own'
				default = '0'
			}
			maxenergyamount {
				type = 'int'
				flags = 'always CardUpdate Info Selection level cmdbar own ActionMenu ActionMenuProgress'
				default = '0'
			}
			energystate {
				type = 'int'
				flags = 'always CardUpdate Info Selection level cmdbar own ActionMenu ActionMenuProgress'
				default = '0'
			}
			Carnivore {
				type = 'bool'
				flags = 'always Selection'
				default = 'false'
			}
			Herbivore {
				type = 'bool'
				flags = 'always Selection'
				default = 'false'
			}
			InCapacitated {
				type = 'bool'
				flags = 'own always'
				default = 'false'
			}
			UnitVersion {
				type = 'int'
				flags = 'always Selection cmdbar ActionMenu'
				default = '0'
			}
			fake_gfx {
				type = 'string'
				flags = 'own always'
				default = 'Iguanodon'
			}
			jet_flying {
				type = 'bool'
				flags = 'own always'
				default = 'false'
			}
			transport_name {
				type = 'string'
				flags = 'own always'
				default = ''
			}
			is_cursed {
				type = 'int'
				flags = 'always'
				default = '0'
			}
			defspeed {
				type = 'int'
				flags = 'always Info'
				default = '0'
			}
			maxspeed {
				type = 'int'
				flags = 'always Info'
				default = '0'
			}
			FowRange {
				type = 'float'
				flags = 'always Info Marker'
				default = '0.0'
			}
			reanimated {
				type = 'int'
				flags = 'own always'
				default = '0'
			}
			flying_unit {
				type = 'bool'
				flags = 'always'
				default = 'false'
			}
			coded_name {
				type = 'string'
				flags = 'always'
				default = ''
			}
			client_update {
				type = 'int'
				flags = 'always Info'
				default = '1'
			}
			camouflage_active {
				type = 'string'
				flags = 'always'
				default = 'false'
			}
			peace_time {
				type = 'bool'
				flags = 'always'
				default = 'false'
			}
			invalid_enemy {
				type = 'bool'
				flags = 'always'
				default = 'false'
			}
			not_detectable {
				type = 'bool'
				flags = 'always'
				default = 'false'
			}
			is_locked {
				type = 'bool'
				flags = 'own CardUpdate Info'
				default = 'false'
			}
			explosives_set {
				type = 'int'
				flags = 'own'
				default = '0'
			}
			ai_lock {
				type = 'bool'
				flags = 'own always'
				default = 'false'
			}
			obj_radius {
				type = 'float'
				flags = 'own always'
			}
		}
		PyCO {
			attribs {
				pre_spirit {
					type = 'bool'
					flags = 'always MrgSprt'
					default = 'false'
				}
				spirit_handle {
					type = 'int'
					flags = 'own'
					default = '-1'
				}
				vertical_fill {
					type = 'int'
					flags = 'always'
					default = '1'
				}
				is_spirit {
					type = 'int'
					flags = 'always'
					default = '0'
				}
			}
		}
		CHTR {
			attribs {
				gender {
					type = 'bool'
					flags = 'own'
				}
				unique_name {
					type = 'string'
					flags = 'own CardUpdate'
				}
				caste {
					type = 'string'
					flags = 'always caste cmdbar Info Selection'
				}
				experience {
					type = 'float'
					flags = 'own CardUpdate CardUpdate Info'
				}
				name {
					type = 'string'
					flags = 'own'
				}
				is_riding {
					type = 'bool'
					flags = 'always'
				}
				anml_guid {
					type = 'string'
					flags = 'always CardUpdate Info'
				}
				bitmapname {
					type = 'string'
					flags = 'own CardUpdate'
				}
				active_camouflage {
					type = 'bool'
					flags = 'own'
				}
				active_disguise {
					type = 'bool'
					flags = 'always'
				}
				active_entrench {
					type = 'int'
					flags = 'own'
				}
				illusion {
					type = 'bool'
					flags = 'own'
					default = 'false'
				}
			}
			HERO = ''
		}
		BLDG {
			attribs {
				building_ready {
					type = 'bool'
					flags = 'own'
					default = 'false'
				}
				CurWorkers {
					type = 'int'
					flags = 'own'
					default = '0'
				}
				AttackBuilding {
					type = 'bool'
					flags = 'own'
					default = 'false'
				}
				free_worker_slots {
					type = 'int'
					flags = 'own'
					default = '0'
				}
				worker_list {
					type = 'string'
					flags = 'own'
					default = ''
				}
				MovingBuilding {
					type = 'int'
					flags = 'own'
					default = '0'
				}
				NPCSeller {
					type = 'bool'
					flags = 'own'
				}
				MarketSlot_0 {
					type = 'int'
					flags = 'own'
				}
				MarketSlot_1 {
					type = 'int'
					flags = 'own'
				}
				MarketSlot_2 {
					type = 'int'
					flags = 'own'
				}
				MarketSlot_3 {
					type = 'int'
					flags = 'own'
				}
				Marketplace {
					type = 'bool'
					flags = 'own'
				}
				TradeBuilding {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				UnlimitedBuilding {
					type = 'int'
					flags = 'own always'
					default = '0'
				}
				ConvertBuilding {
					type = 'int'
					flags = 'own'
					default = '0'
				}
				IsInventSite {
					type = 'int'
					flags = 'own cmdbar'
					default = '0'
				}
				passenger_guids {
					type = 'string'
					flags = 'always cmdbar CardUpdate Info ActionMenu'
				}
				max_passengers {
					type = 'int'
					flags = 'own always'
				}
				passengers_onboard {
					type = 'int'
					flags = 'always'
				}
				registered_passengers {
					type = 'int'
					flags = 'always'
				}
				IsHarbour {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				parent_guids {
					type = 'string'
					flags = 'own cmdbar CardUpdate Info ActionMenu'
				}
				BuildupProcess {
					type = 'int'
					flags = 'always'
				}
				CurrentResource {
					type = 'string'
					flags = 'own always'
					default = 'food'
				}
			}
		}
		PLMX {
			attribs {
				Heroes {
					type = 'string'
					flags = 'always own Info Selection cmdbar ActionMenu ActionMenuProgress'
				}
				AvailableCookies {
					type = 'string'
					flags = 'always cmdbar ActionMenu ActionMenuProgress'
				}
				babbage_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				Bela_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				Cole_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				darwin_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				hermit_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				Larry_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				livingstone_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				lovelace_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				mayor_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				Miyagi_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				schliemann_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				special_eusmilus {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				Tarna_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				tesla_s0 {
					type = 'int'
					flags = 'always'
					default = '-2'
				}
				tbasket_healing {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				supply_system {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				unlimited_storage {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				resource_corpse {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				hero_pool {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				free_specials {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				epoch_six {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				titan_slots {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				flying_enabled {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				titans_disabled {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				inited {
					type = 'int'
					flags = 'always'
					default = '0'
				}
				leveling_allowed {
					type = 'int'
					flags = 'always'
					default = '0'
				}
			}
		}
		TRSP {
			attribs {
				passenger_guids {
					type = 'string'
					flags = 'always cmdbar CardUpdate Info ActionMenu'
				}
				passengers_onboard {
					type = 'int'
					flags = 'always'
				}
				max_passengers {
					type = 'int'
					flags = 'always cmdbar CardUpdate Info'
				}
				registered_passengers {
					type = 'int'
					flags = 'always'
				}
				trade {
					type = 'int'
					default = '0'
					flags = 'own'
				}
				trade_home {
					type = 'string'
					default = '0'
					flags = 'own'
				}
			}
			ANML {
				attribs {
					is_ridden {
						type = 'int'
						flags = 'always cmdbar CardUpdate Info'
					}
					rider_guid {
						type = 'string'
						flags = 'always CardUpdate Info'
					}
					hero_guid {
						type = 'string'
						flags = 'always CardUpdate Info'
					}
					birth_time {
						type = 'float'
						flags = 'always'
					}
					growup_duration {
						type = 'float'
						flags = 'always'
					}
					camouflage_anml {
						type = 'int'
						default = '0'
						flags = 'own always'
					}
					is_baby {
						type = 'bool'
						flags = 'always'
						default = 'false'
					}
					building_ready {
						type = 'bool'
						flags = 'own'
						default = 'true'
					}
				}
			}
			VHCL {
				attribs {
					num_passengers {
						type = 'int'
						flags = 'always cmdbar CardUpdate Info'
					}
				}
			}
			SHIP {
				attribs {
					name {
						type = 'string'
						flags = 'always'
					}
					min_crew_count {
						type = 'int'
						flags = 'always Info'
					}
					fishingBoat {
						type = 'int'
						flags = 'always'
						default = '0'
					}
				}
			}
		}
		NEST {
			attribs {
				spawn_type {
					type = 'string'
				}
				spawn_amount {
					type = 'int'
				}
				spawn_max {
					type = 'int'
				}
				spawn_rate {
					type = 'float'
				}
				preplace_anmls {
					type = 'string'
				}
				advance_time {
					type = 'float'
				}
				hotspot_timetable {
					type = 'string'
				}
				no_respawn {
					type = 'int'
					default = '0'
				}
			}
		}
		RPGM {
			attribs {
				started {
					type = 'bool'
					flags = 'always own Info Selection cmdbar ActionMenu ActionMenuProgress'
				}
			}
		}
	}
	RSRC {
		attribs {
			value {
				type = 'int'
				flags = 'always Info'
			}
			inactive {
				type = 'int'
				flags = 'always'
				default = '0'
			}
			skip_this {
				type = 'int'
				flags = 'always'
				default = '0'
			}
			Meat {
				type = 'bool'
				flags = 'always'
				default = 'false'
			}
			Plant {
				type = 'bool'
				flags = 'always'
				default = 'false'
			}
		}
		STON = ''
		FRUI {
			attribs {
				fish {
					type = 'int'
					flags = 'always'
				}
			}
		}
		FOOD {
			attribs {
				birth_time {
					type = 'float'
					flags = 'always'
				}
				class {
					type = 'string'
					flags = 'always'
				}
				food_guid {
					type = 'string'
					flags = 'always'
					default = 'dummy'
				}
				die_time {
					type = 'float'
					flags = 'always'
				}
				growup_duration {
					type = 'float'
					flags = 'always'
				}
				fish {
					type = 'int'
					flags = 'always'
				}
			}
		}
		WOOD = ''
	}
	ANTD {
		attribs {
			birth_time {
				type = 'float'
				flags = 'always'
			}
			die_time {
				type = 'float'
				flags = 'always'
			}
			growup_duration {
				type = 'float'
				flags = 'always'
			}
			fish {
				type = 'int'
				flags = 'always'
			}
		}
	}
	VGTN {
		TREE {
			attribs {
				Meat {
					type = 'bool'
					flags = 'always'
					default = 'false'
				}
				Plant {
					type = 'bool'
					flags = 'always'
					default = 'false'
				}
			}
		}
	}
	LGHT {
		attribs {
			type {
				type = 'string'
				flags = 'always'
			}
			dir {
				type = 'string'
				flags = 'always'
			}
			range {
				type = 'float'
				flags = 'always'
			}
			diffuse {
				type = 'string'
				flags = 'always'
			}
			ambient {
				type = 'string'
				flags = 'always'
			}
			specular {
				type = 'string'
				flags = 'always'
			}
			attenuation_const {
				type = 'float'
				flags = 'always'
			}
			attenuation_linear {
				type = 'float'
				flags = 'always'
			}
			attenuation_squared {
				type = 'float'
				flags = 'always'
			}
			inner_cone {
				type = 'float'
				flags = 'always'
			}
			outer_cone {
				type = 'float'
				flags = 'always'
			}
		}
	}
	ATMO {
		attribs {
			priority {
				type = 'float'
				flags = 'always'
			}
			volume {
				type = 'int'
				flags = 'always'
			}
			pitch {
				type = 'float'
				flags = 'always'
			}
			flags {
				type = 'int'
				flags = 'always'
			}
			minfadedist {
				type = 'float'
				flags = 'always'
			}
			maxfadedist {
				type = 'float'
				flags = 'always'
			}
			maxhearingdist {
				type = 'float'
				flags = 'always'
			}
			flags {
				type = 'int'
				flags = 'always'
			}
			innerconeangle {
				type = 'int'
				flags = 'always'
			}
			outerconeangle {
				type = 'int'
				flags = 'always'
			}
			coneoutsidevolume {
				type = 'int'
				flags = 'always'
			}
			wav1 {
				type = 'string'
				flags = 'always'
			}
			wav2 {
				type = 'string'
				flags = 'always'
			}
			wav3 {
				type = 'string'
				flags = 'always'
			}
			playlist {
				type = 'string'
				flags = 'always'
			}
		}
	}
	EAXE {
		attribs {
			environmentname {
				type = 'string'
				flags = 'always'
			}
		}
	}
	PROD {
		attribs {
			name {
				type = 'string'
				flags = 'always'
			}
		}
		ITEM {
			attribs {
				ObjPath {
					type = 'string'
					flags = 'always'
				}
				item_type {
					type = 'string'
					flags = 'always'
				}
				item_data {
					type = 'string'
					flags = 'always'
				}
			}
		}
	}
	FLCK {
		attribs {
			size {
				type = 'float'
				flags = 'always'
			}
		}
	}
	ITSP {
		attribs {
			spawn_items {
				type = 'string'
				flags = 'always'
			}
			generate_always {
				type = 'bool'
				flags = 'always'
			}
			random_item {
				type = 'bool'
				flags = 'always'
			}
		}
	}
	OTHR {
		attribs {
			level {
				type = 'int'
				flags = 'always'
				default = '-1'
			}
			class {
				type = 'string'
				flags = 'always'
				default = 'hallo'
			}
		}
	}
	GROU {
		attribs {
			num_stages {
				type = 'int'
				default = '5'
			}
			member_hndl_0 {
				type = 'string'
			}
			member_hndl_1 {
				type = 'string'
			}
			member_hndl_2 {
				type = 'string'
			}
			member_hndl_3 {
				type = 'string'
			}
			member_hndl_4 {
				type = 'string'
			}
		}
	}
	FNTN {
		attribs {
			refill_dur {
				type = 'int'
				flags = 'always'
				default = '120'
			}
		}
	}
	KOTS {
		attribs {
			rgn_pos {
				type = 'string'
			}
			rgn_radius {
				type = 'float'
			}
			controlling_team {
				type = 'int'
				default = '-1'
			}
		}
	}
	DMGL {
		attribs {
			damage_per_tick {
				type = 'int'
			}
			damage_types {
				type = 'string'
			}
			region_name {
				type = 'string'
			}
		}
	}
	LAVA {
		attribs {
			damage_per_tick {
				type = 'int'
			}
			insta_kill {
				type = 'bool'
				default = 'false'
			}
			height {
				type = 'float'
				flags = 'always'
				default = '16.0'
			}
			region_name {
				type = 'string'
			}
		}
	}
	TIME {
		attribs {
			timer_id {
				type = 'int'
				flags = 'always'
			}
			occupant {
				type = 'string'
				default = 'nobody'
			}
			start_time {
				type = 'gametime'
				flags = 'always'
			}
			duration {
				type = 'float'
				flags = 'always'
			}
			repeat {
				type = 'bool'
				flags = 'always'
			}
			show {
				type = 'bool'
				flags = 'always'
			}
			paused {
				type = 'bool'
				flags = 'always'
				default = 'false'
			}
			pause_start {
				type = 'gametime'
				flags = 'always'
			}
			tooltip {
				type = 'string'
				flags = 'always'
				default = ''
			}
			icon {
				type = 'string'
				flags = 'always'
				default = 'default'
			}
		}
	}
	DOFL {
		attribs {
			endtime {
				type = 'gametime'
				flags = 'always'
			}
			updown_dir {
				type = 'string'
				flags = 'always'
				default = 'down'
			}
		}
	}
	GPCE {
	}
	DCCO {
		attribs {
			blocker {
				type = 'bool'
				flags = 'always'
				default = 'true'
			}
		}
	}
	NMST {
		attribs {
			class_of_source {
				type = 'string'
				flags = 'always'
				default = ''
			}
			desc_of_source {
				type = 'string'
				flags = 'always'
				default = ''
			}
			deactivated {
				type = 'int'
				flags = 'always MrgSprt'
				default = '0'
			}
			id_of_source {
				type = 'int'
				flags = 'always MrgSprt'
				default = '-2'
			}
		}
	}
	REVE {
		attribs {
			reveal_radius {
				type = 'float'
				flags = 'own'
				default = '15.0'
			}
		}
	}
}
