class CMultiPlayerSelectScreen inherit CStateUIWnd
	
	var ^CDesktop	m_pxDesktop;
	
	export constructor()
		if(!InitFromResource("UI/MultiPlayerSelectScreen","MultiPlayerSelectScreen")) then
			return;
		endif;
		
		m_pxDesktop=CClientWrap.GetDesktop();
		SetSize(300 * CGameInst.ms_iUIScaleFactor,380 * CGameInst.ms_iUIScaleFactor);
		var CConfig xConf;
		if(xConf.GetI("Game/GUIOptions/CenterMenu",1)==1)then 
			SetPos(m_pxDesktop^.GetWidth()/2-GetWidth()/2,m_pxDesktop^.GetHeight()/2-GetHeight()/2);
		else
			SetPos(30 * CGameInst.ms_iUIScaleFactor,30 * CGameInst.ms_iUIScaleFactor);
		endif;
		
		var ^CButton pxTmp = cast<CButton>(GetControl("Back"));
		pxTmp^.m_xOnClick=OnBack;

		pxTmp=cast<CButton>(GetControl("LAN"));
		pxTmp^.m_xOnClick=OnLAN;
		
		pxTmp=cast<CButton>(GetControl("Internet"));
		pxTmp^.m_xOnClick=OnInternet;
		pxTmp^.SetDisabled(false);
		
		pxTmp=cast<CButton>(GetControl("JoinDirectIP"));
		pxTmp^.SetDisabled(false);
		pxTmp^.m_xOnClick=OnJoinIP;
		
		
		pxTmp=cast<CButton>(GetControl("HostDirectIP"));
		pxTmp^.SetDisabled(false);
		pxTmp^.m_xOnClick=OnHostIP;
		
		SetCaption(CLocalizer.Get().Translate("_UI_MPlSelSc_Title_Multiplayer"));
	endconstructor;
	
	proc bool GetShift(CEvtPointer p_xEvt)
		var bool bReturn=false;
	   	if(p_xEvt.IsNotNull())then
			if(Msg.EventKeyModShift(p_xEvt))then
				bReturn=true;
			endif;
		endif;
		return bReturn;
	endproc;

	export proc bool Init(int p_iState)
		return(true);
	endproc;
	
	proc bool OnLAN()
		CMultiPlayerClientMgr.Get().SetSkirmishMode(false); 
		CMultiPlayerClientMgr.Get().SetDirectIPMode(false);
		CGameWrap.SetGameSpyGame(true);
		CGameWrap.SetInternetGame(false);
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_NEWMULTIPLAYERLOBBY,"LAN");
		return(true);
	endproc;
	
	proc bool OnInternet()
		CMultiPlayerClientMgr.Get().SetSkirmishMode(false); 
		CMultiPlayerClientMgr.Get().SetDirectIPMode(false);
		CGameWrap.SetGameSpyGame(true);
		CGameWrap.SetInternetGame(true);
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_NEWMULTIPLAYERLOBBY,"Internet");
		return(true);
	endproc;
	
	proc bool OnHostIP()
		/*CMultiPlayerClientMgr.Get().SetDirectIPMode(true);
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_MULTIPLAYERHOSTIP);
		return(true);*/
		CMultiPlayerClientMgr.Get().SetSkirmishMode(false); 
		CMultiPlayerClientMgr.Get().SetDirectIPMode(true);
		CGameWrap.SetGameSpyGame(false);
		CGameWrap.SetInternetGame(false);
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_NEWMULTIPLAYERLOBBY,"HostIP");
		return(true);
	endproc;
	
	proc bool OnJoinIP()
		CMultiPlayerClientMgr.Get().SetDirectIPMode(true);
		CMultiPlayerClientMgr.Get().SetSkirmishMode(false);
		CGameWrap.SetGameSpyGame(false);
		CGameWrap.SetInternetGame(false);
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_MULTIPLAYERJOINIP);
		return(true);
	endproc;
	
	proc bool OnBack()
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_MAINMENU);
		return true;
	endproc;

endclass;
