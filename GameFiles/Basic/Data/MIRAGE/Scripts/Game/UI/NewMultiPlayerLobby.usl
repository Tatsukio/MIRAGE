class CNewMultiPlayerLobby inherit CStaticCtrl
	
	var ^CDesktop m_pxDesktop;
	var ^CGameListWindow m_pxGameListWindow;
	var ^CGameInfoWindow m_pxGameInfoWindow;
	var ^CButton m_pxGameSpyLogo;
	
	export constructor(string p_sParam)
		m_pxDesktop=CClientWrap.GetDesktop();
		
		var real fPercentageX=2.0f;
		var real fPercentageY=3.0f;
		
		var real fWidth=m_pxDesktop^.GetWidth().ToReal();
		var real fHeight=m_pxDesktop^.GetHeight().ToReal();
		//var int iPosX=((fWidth/100.0f)*fPercentageX).ToInt();
		//var int iPosY=((fHeight/100.0f)*fPercentageY).ToInt();
		
		//SetPos(iPosX,iPosY);
		//SetSize(1024-(iPosX*2),768-(iPosY*2));
		SetPos(0,0);
		SetSize(m_pxDesktop^.GetWidth(),m_pxDesktop^.GetHeight());
		
		m_pxGameInfoWindow=new CGameInfoWindow(CGameInfoWindow.GIWT_MULTIPLAYER,CMultiPlayerClientMgr.Get().GetMapInfoList(),false);
		m_pxGameInfoWindow^.SetPointBuyAvailable(false);
		AddChild(m_pxGameInfoWindow);
		//m_pxGameInfoWindow^.SetPos(30 * CGameInst.ms_iUIScaleFactor,30 * CGameInst.ms_iUIScaleFactor);
		m_pxGameInfoWindow^.SetPos(m_pxDesktop^.GetWidth()/2-GetWidth()/2,m_pxDesktop^.GetHeight()/2-GetHeight()/2);
		m_pxGameListWindow=new CGameListWindow(m_pxGameInfoWindow);
		AddChild(m_pxGameListWindow);
		m_pxGameListWindow^.SetPos(350 * CGameInst.ms_iUIScaleFactor,30 * CGameInst.ms_iUIScaleFactor);

		if(CGameWrap.IsGameSpyGame()) then
			m_pxGameSpyLogo=new CButton;
			var string sImg = CClientWrap.GetUrsRelPath()+"/Data/Base/UI/menue/decoration/logo_openspy.tga";
			m_pxGameSpyLogo^.SetBitmap(sImg,sImg,sImg,sImg);	
			m_pxGameSpyLogo^.SetSize(130 * CGameInst.ms_iUIScaleFactor,30 * CGameInst.ms_iUIScaleFactor);
			m_pxGameSpyLogo^.SetPos(832 * CGameInst.ms_iUIScaleFactor,54 * CGameInst.ms_iUIScaleFactor);
			m_pxGameSpyLogo^.SetAlwaysOnTop(true);
			m_pxGameSpyLogo^.SetFrame(false);
			m_pxGameSpyLogo^.m_xOnClick=OnOpenSpySite;
			AddChild(m_pxGameSpyLogo);
		else
			m_pxGameSpyLogo=null;
		endif;
						
		//m_pxGameInfoWindow^.SetPBAvailable(false);
		
/*		if(p_sParam=="LAN")then
			m_pxGameListWindow^.SetMode(true);
		else
			m_pxGameListWindow^.SetMode(false);
		endif;
*/
		m_pxGameListWindow^.OnHost();
	endconstructor;

	export destructor()
		CMultiPlayerClientMgr.Get().SetNewMultiPlayerLobbyWindow(null);
	enddestructor;

	export proc bool Init(int p_iState)
		m_pxGameListWindow^.Init(p_iState);
		CMultiPlayerClientMgr.Get().SetNewMultiPlayerLobbyWindow(this);
		return(true);
	endproc;
	
	export proc bool OnGameSpyInitFailed()
		//L KLog.LogSpam("MaSc", "NewMultiPlayerLobbyWindow::OnGameSpyInitFailed komme from UIState"+(CUIStateMgr.Get().GetState()).ToString());				
		if(CUIStateMgr.Get().GetState()==CUIStateMgr.STATE_NEWMULTIPLAYERLOBBY)then			
			m_pxGameListWindow^.SetVisible(false);
			m_pxGameInfoWindow^.SetVisible(false);
			m_pxGameSpyLogo^.SetVisible(false);
		elseif(CUIStateMgr.Get().GetState()==CUIStateMgr.STATE_NEWMULTIPLAYERPREGAME)then
			//L KLog.LogSpam("MaSc", "Komm ich hier vorbei ... ?");
		endif;
		CMessageBox.MsgBox_OK(CLocalizer.Get().Translate("_UI_MPlLobby_Msgbox_MPNetworkSetupFailed"),CLocalizer.Get().Translate("_UI_MPlLobby_Msgbox_MPNetworkSetupFailed"),CMessageBox.SMB_ICONEXCLAMATION,OnOkMsgBox_CallBack);				
		return true;
	endproc;
	
	proc bool OnOpenSpySite()
		m_pxDesktop^.OpenURLInBrowser("http://beta.openspy.net/en/server-list/paraworld");
		return true;
	endproc;
	
	proc void OnOkMsgBox_CallBack(int p_iResult)
		var bitset dwResult = Math.IntToBitset(p_iResult);
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_MULTIPLAYERSELECT);
	endproc;
	
	proc bool OnBack()
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_MULTIPLAYERSELECT);
		return true;
	endproc;

	export proc bool OnHost()
		if(m_pxGameListWindow!=null)then
			m_pxGameListWindow^.OnStartGame();
		endif;
		return(true);
	endproc;

endclass;

